name: Deploy to Server

on:
  push:
    branches:
      - main
    paths:
      - "backend/src/**"
      - ".github/workflows/be.deploy.yml"
  pull_request:
    branches:
      - main
    paths:
      - "backend/src/**"
      - ".github/workflows/be.deploy.yml"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to Server
        run: |
          ssh-keyscan -H ${{ secrets.SSH_SERVER_IP }} >> ~/.ssh/known_hosts
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_SERVER_USER }}@${{ secrets.SSH_SERVER_IP }} << 'EOF'
              set -e
              cd /root/interview
              rm -rf share-profit-calculator  # Remove the directory if it exists
              # Clone the repo using the PAT stored in the GitHub secret
              git clone https://\${{ secrets.PAT }}:x-oauth-basic@github.com/StiliyanKushev/share-profit-calculator.git
              cd ./share-profit-calculator/backend

              # source nvm to work in the non-interactive shell used by the ci
              source ~/.nvm/nvm.sh

              npm ci
              npm run build

              # kill anything running from a previous session
              pm2 delete backend
              sudo docker stop $(sudo docker ps -a -q) || true

              # write the production env file using secrets
              touch .env
              echo "# MISC"                                                     >> .env
              echo "ENVIRONMENT=production"                                     >> .env
              echo "MINIMUM_LOG_LEVEL=debug"                                    >> .env
              echo "# SWAGGER"                                                  >> .env
              echo "SWAGGER_TITLE=Docs Title"                                   >> .env
              echo "SWAGGER_DESCRIPTION=Docs Description"                       >> .env
              echo "SWAGGER_VERSION=0.0.1"                                      >> .env
              echo "# JWT"                                                      >> .env
              echo "JWT_SECRET=${{ secrets.JWT_SECRET }}"                       >> .env
              echo "JWT_TOKEN_AUDIENCE=${{ secrets.JWT_TOKEN_AUDIENCE }}"       >> .env
              echo "JWT_TOKEN_ISSUER=${{ secrets.JWT_TOKEN_ISSUER }}"           >> .env
              echo "JWT_ACCESS_TOKEN_TTL=3600"                                  >> .env
              echo "JWT_REFRESH_TOKEN_TTL=86400"                                >> .env
              echo "# DB"                                                       >> .env
              echo "POSTGRES_HOST=localhost"                                    >> .env
              echo "POSTGRES_PORT=5432"                                         >> .env
              echo "POSTGRES_USERNAME=${{ secrets.POSTGRES_USERNAME }}"         >> .env
              echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}"         >> .env
              echo "POSTGRES_DATABASE=postgres"                                 >> .env
              echo "# REDIS"                                                    >> .env
              echo "REDIS_HOST=localhost"                                       >> .env
              echo "REDIS_PORT=6379"                                            >> .env
              echo "# CORS"                                                     >> .env
              echo "CORS_ORIGIN=${{ secrets.CORS_ORIGIN }}"                     >> .env

              npm run docker:prepare
              pm2 start dist/main.js --name backend
          EOF
